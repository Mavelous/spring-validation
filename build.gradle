plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'org.jetbrains.kotlin.jvm' version '1.5.10'

	// If you include the following plugin, then you will not be required to mark
	// your Kotlin classes *and* functions as "open" because this plugin will
	// do that for you.  Since this project is meant to be a learning exercise
	// along with pseudo-documentation, I am electing to use "open" everywhere
	// to remind myself of this fact.
	//id "org.jetbrains.kotlin.plugin.spring" version "1.5.10"

	id 'com.github.johnrengelman.processes' version '0.5.0'
	id 'org.springdoc.openapi-gradle-plugin' version '1.3.2'

	id 'com.github.ben-manes.versions' version "0.38.0"
}

group = 'com.mikevitale'
version = '0.0.1'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'io.github.microutils:kotlin-logging:2.0.6'
	implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.5.9'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
}

openApi {
	apiDocsUrl.set("http://localhost:8080/v3/api-docs")
	outputDir.set(file("$buildDir/docs"))
	outputFileName.set("demo.json")
	waitTimeInSeconds.set(10)
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
